---
- name: check if we are running supported os
  assert:
    fail_msg: "{{ role_name }} only supports ubuntu versions 16, 18, 20, 22,   centos versions 7, centos strem versions 8, rhel versions 8, 9!"
    success_msg: "{{ role_name }} supports {{ ansible_distribution }} version {{ ansible_distribution_version }}"
    quiet: "{{ not ansible_check_mode }}"
    that:
      ( ansible_distribution == "Ubuntu" and ansible_distribution_version|int in [16, 18, 20, 22] )
      or ( ansible_distribution == "CentOS" and ansible_distribution_major_version|int in [7, 8] )
      or ( ansible_distribution == "RedHat" and ansible_distribution_major_version|int in [8, 9] )
      or ( ansible_distribution == "Win32NT" )


- name: real list of enabled users if root_keys_users_limit|length > 0
  set_fact:
    root_keys_users_real: >-
      {{ root_keys_users | selectattr("enabled", "defined") | selectattr("enabled")
      | map(attribute="user") | list | intersect(root_keys_users_limit) }}
  when: root_keys_users_limit|length > 0

- name: |
    always add root_keys_users_always
    use all enabled users as base if root_keys_users_limit|length == 0
  set_fact:
    root_keys_users_real: >-
      {{ root_keys_users_real | default(root_keys_users|selectattr("enabled", "defined")
      | selectattr("enabled")|map(attribute="user")|list) | union(root_keys_users_always) }}

- name: include tasks for linux or windows
  include: "{{ ansible_system | lower }}.yml"

- name: dist authorized_keys
  template:
    src: authorized_keys.j2
    dest: "{{ root_keys_authorized_keys_file }}"
    mode: 0600
    owner: root
    group: root
