---
- name: Check if we are running supported os
  ansible.builtin.assert:
    fail_msg: "{{ role_name }} only supports ubuntu versions 20, 22, 24,  centos versions 7, centos strem versions 8, rhel versions 8, 9!"
    success_msg: "{{ role_name }} supports {{ ansible_distribution }} version {{ ansible_distribution_version }}"
    quiet: "{{ not ansible_check_mode }}"
    that:
      ( ansible_distribution == "Ubuntu" and ansible_distribution_version|int in [20, 22, 24] )
      or ( ansible_distribution == "CentOS" and ansible_distribution_major_version|int in [7, 8] )
      or ( ansible_distribution == "RedHat" and ansible_distribution_major_version|int in [8, 9] )
      or ( ansible_distribution == "Fedora" and ansible_distribution_major_version|int in [38, 39] )
      or ( ansible_distribution == "Win32NT" )

- name: Real list of enabled users if root_keys_users_limit | length > 0
  ansible.builtin.set_fact:
    root_keys_users_real: >-
      {{ root_keys_users | selectattr("enabled", "defined") | selectattr("enabled")
      | map(attribute="user") | list | intersect(root_keys_users_limit) }}
  when: root_keys_users_limit | length > 0

- name: |
    Always add root_keys_users_always
    use all enabled users as base if root_keys_users_limit | length == 0
  ansible.builtin.set_fact:
    root_keys_users_real: >-
      {{ root_keys_users_real | default(root_keys_users | selectattr("enabled", "defined")
      | selectattr("enabled") | map(attribute="user") | list) | union(root_keys_users_always) }}

- name: Include tasks for linux or windows
  ansible.builtin.include_tasks:
    file: "{{ ansible_system | lower }}.yml"

- name: Dist authorized_keys
  ansible.builtin.template:
    src: authorized_keys.j2
    dest: "{{ root_keys_authorized_keys_file }}"
    mode: '0600'
    owner: '{{ root_keys_authorized_keys_file_owner }}'
    group: '{{ root_keys_authorized_keys_file_group }}'
